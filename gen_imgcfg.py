#!/usr/bin/env python3

import json
import sys

def generate_genimage_cfg(name, partitions):
    cfg_content = '''
# This is a genimage configuration file auto generated by gen_imgcfg.py.
# require genimage version 16

'''
    cfg_content += 'image %s {' % name
    cfg_content += '''
    hdimage {
        partition-table-type = gpt
    }
'''

    for partition in partitions:
        name = partition.get("name", "")
        src_size = partition.get("size", "")
        hidden = partition.get("hidden", False)
        visible = "true"
        if hidden == True:
            visible = "false"
        if src_size == "-":
            src_size = ""
        offset = partition.get("offset", "")
        image = partition.get("image", "")
        holes = partition.get("holes", "{}")


        cfg_content += f'''
    partition {name} {{
            image = "{image}"
            offset = "{offset}"
            size = "{src_size}"
            holes = {holes}
            in-partition-table = "{visible}"
    }}
        '''

    cfg_content += '''
}

'''

    return cfg_content

if __name__ == "__main__":
    json_file = "partition_universal.json"
    image_name = "sdcard.img"
    cfg_file = "genimage.cfg"

    args = sys.argv[1:]
    for i in range(0, len(args), 2):
        if args[i] == "-i":
            json_file = args[i+1]
        elif args[i] == "-n":
            image_name = args[i+1]
        elif args[i] == "-o":
            cfg_file = args[i+1]
        else:
            print(f"Usage: {sys.argv[0]} [-i <partitions json file>] [-n <image name>] [-o <cfg file>]")
            sys.exit(1)

    try:
        with open(json_file, 'r') as file:
            cfg_content = json.load(file)

        partitions = cfg_content["partitions"]
        genimage_cfg = generate_genimage_cfg(image_name, partitions)
    except FileNotFoundError:
        print(f"找不到文件: {json_file}")
    except json.JSONDecodeError as e:
        print(f"解析 JSON 时出错: {e}")

    with open(cfg_file, "w") as f:
        f.write(genimage_cfg)
